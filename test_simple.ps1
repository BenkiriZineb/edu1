# Test simple de l'API des notes
Write-Host "üß™ TEST SIMPLE DE L'API DES NOTES" -ForegroundColor Cyan
Write-Host "=====================================" -ForegroundColor Cyan

# Attendre que le serveur d√©marre
Write-Host "‚è≥ Attente du d√©marrage du serveur..." -ForegroundColor Yellow
Start-Sleep -Seconds 20

# Test 1: V√©rifier que le serveur est accessible
Write-Host "`nüîç Test 1: V√©rification de l'accessibilit√© du serveur" -ForegroundColor Green
try {
    $response = Invoke-RestMethod -Uri "http://localhost:8080/api/notes" -Method GET
    Write-Host "‚úÖ Serveur accessible !" -ForegroundColor Green
    Write-Host "   $($response.Count) note(s) trouv√©e(s)" -ForegroundColor White
} catch {
    Write-Host "‚ùå Serveur non accessible: $($_.Exception.Message)" -ForegroundColor Red
    Write-Host "   V√©rifiez que le serveur Spring Boot est d√©marr√©" -ForegroundColor Yellow
    exit 1
}

# Test 2: Cr√©er une nouvelle note
Write-Host "`nüìù Test 2: Cr√©ation d'une nouvelle note" -ForegroundColor Green
$nouvelleNote = @{
    eleveId = 1
    coursId = 1
    matiereId = 1
    valeur = 16.5
    noteMaximale = 20.0
    commentaire = "Tr√®s bon travail !"
    date = "2025-08-26"
    type = "DEVOIR"
} | ConvertTo-Json

try {
    $response = Invoke-RestMethod -Uri "http://localhost:8080/api/notes" -Method POST -Body $nouvelleNote -ContentType "application/json"
    Write-Host "‚úÖ Note cr√©√©e avec succ√®s !" -ForegroundColor Green
    Write-Host "   ID: $($response.id)" -ForegroundColor White
    Write-Host "   Note: $($response.valeur)/$($response.noteMaximale)" -ForegroundColor White
    $noteId = $response.id
} catch {
    Write-Host "‚ùå Erreur lors de la cr√©ation: $($_.Exception.Message)" -ForegroundColor Red
    exit 1
}

# Test 3: R√©cup√©rer la note par ID
Write-Host "`nüîç Test 3: R√©cup√©ration de la note par ID" -ForegroundColor Green
try {
    $response = Invoke-RestMethod -Uri "http://localhost:8080/api/notes/$noteId" -Method GET
    Write-Host "‚úÖ Note r√©cup√©r√©e !" -ForegroundColor Green
    Write-Host "   Valeur: $($response.valeur)/$($response.noteMaximale)" -ForegroundColor White
    Write-Host "   Commentaire: $($response.commentaire)" -ForegroundColor White
} catch {
    Write-Host "‚ùå Erreur lors de la r√©cup√©ration: $($_.Exception.Message)" -ForegroundColor Red
}

# Test 4: Calculer la moyenne d'un √©l√®ve
Write-Host "`nüìä Test 4: Calcul de la moyenne d'un √©l√®ve" -ForegroundColor Green
try {
    $response = Invoke-RestMethod -Uri "http://localhost:8080/api/notes/eleve/1/moyenne" -Method GET
    Write-Host "‚úÖ Moyenne de l'√©l√®ve 1: $response%" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Erreur lors du calcul: $($_.Exception.Message)" -ForegroundColor Red
}

# Test 5: Statistiques d'un √©l√®ve
Write-Host "`nüìà Test 5: Statistiques d'un √©l√®ve" -ForegroundColor Green
try {
    $response = Invoke-RestMethod -Uri "http://localhost:8080/api/notes/eleve/1/stats" -Method GET
    Write-Host "‚úÖ Statistiques √©l√®ve 1:" -ForegroundColor Green
    Write-Host "   - Moyenne: $($response.moyenne)%" -ForegroundColor White
    Write-Host "   - Note max: $($response.noteMaximale)%" -ForegroundColor White
    Write-Host "   - Note min: $($response.noteMinimale)%" -ForegroundColor White
    Write-Host "   - Total notes: $($response.totalNotes)" -ForegroundColor White
} catch {
    Write-Host "‚ùå Erreur lors des statistiques: $($_.Exception.Message)" -ForegroundColor Red
}

Write-Host "`nüéâ TESTS TERMIN√âS !" -ForegroundColor Cyan
Write-Host "Votre API des notes fonctionne parfaitement !" -ForegroundColor Green
